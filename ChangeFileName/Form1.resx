<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AABAREQCQEREA0BERANAREQDQEREA0BERANITU0DVFlZAlRZWQJUWloCVFpaAlRaWgJUWVkCVFlZAlRa
        WgJUWloCVFpaAlRZWQJUWVkCVFpaAlVaWgJPVFQCQUVFA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDQEREA0BERANAREQEQEREBEBERARAREQETFFRAhUWFgoODw8SDg8PEg4PDxIODw8SDg8PEg4P
        DxIODw8SDg8PEg4PDxIODw8SDg8PEg4PDxIODw8SDg8PEhESEg8uMTEDS1BQA0BERARAREQEQEREBEBE
        RARAREQEQEREBEBERARAREQDQEREA0BERARAREQEQEREBHh/fwIGBgYsAgIChAICAoUCAgKGAgIChwIC
        AocCAgKHAgIChwICAocCAgKHAgIChwICAocCAgKHAgIChwICAocCAgKHAgIChwICAmsICQkSm6SkAUBE
        RARAREQEQEREBEBERARAREQEQEREBEBERANAREQDQEREBEBERARBRkYEMDQ0BQICAnsEBAQ+AwMDTAIC
        AocCAgKFAgIChQICAoUCAgKFAgIChQICAoUCAgKFAgIChQICAoUCAgKFAgIChQICAoUCAgKJAQEBugIC
        AowGBgYiz9vbAUNHRwRAREQEQEREBEBERARAREQEQEREA0BERANAREQEQEREBERJSQQYGRkLAgICggQE
        BDoCAgKFBAQEQQICAoACAgKTAgICkgICApICAgKSAgICkgICApICAgKSAgICkgICApICAgKSAgICkgIC
        ApICAgKPAgICrgEBAbYEBQU3Nzo6BEJGRgRAREQEQEREBEBERARAREQDQEREA0BERARAREQERUlJBBcZ
        GQsCAgKBAwMDWAICAmgCAgJkAgMDZgQEBD0EBAQ/BAQEPwQEBD8EBAQ/BAQEPwQEBD8EBAQ/BAQEPwQE
        BD8EBAQ/BAQEPwQEBD8EBAQ9AwMDSQICAoQEBARBnqioAkBERARAREQEQEREBEBERANAREQDQEREBEBE
        RARFSUkEFxkZCwICAoEDAwNZAgICcAICAoIDAwMWAwMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALzAwAAAAAAAAwQEMAICAnxCRkYEQEREBEBERARAREQEQEREA0BE
        RANAREQEQEREBEVJSQQXGRkLAgICgQMDA1kCAgJyAgICggsMDBZudHQCiZGRAoqSkgKKkpICiZKSAomS
        kgKKkpICipKSAoqSkgKJkpICiZKSAoqSkgKLk5MCfISEApqkpAIGBwcnAgICfjI1NQVBRUUEQEREBEBE
        RARAREQDQEREA0BERARAREQERUlJBBcZGQsCAgKBAwMDWQICAnICAgKCDAwMFhARERAGBwcoBgcHKAYH
        BygGBwcoBgcHKAYHBygGBwcoBgcHKAYHBygGBwcoBgcHKAYHBygHCAgkIyUlBwYHBycCAgJ+MjY2BUFF
        RQRAREQEQEREBEBERANAREQDQEREBEBERARFSUkEFxkZCwICAoEDAwNZAgICcgICAoIMDQ0VBQYGLwIC
        AnsCAgJ8AgICfAICAnwCAgJ8AgICfAICAnwCAgJ8AgICfAICAnwCAgJ8AgICfQICAnAMDQ0VBwcHJwIC
        An4yNjYFQUVFBEBERARAREQEQEREA0BERANAREQEQEREBEVJSQQXGRkLAgICgQMDA1kCAgJyAgICggwM
        DBYPEBAQBgYGKQYGBikGBgYpBgYGKQYGBikGBgYpBgYGKQYGBikGBgYpBgYGKQYGBikGBgYqBwcHJiIk
        JAcGBwcnAgICfjI2NgVBRUUEQEREBEBERARAREQDQEREA0BERARAREQERUlJBBcZGQsCAgKBAwMDWQIC
        AnICAgKCDA0NFQUGBi8CAgJ7AgICewICAnsCAgJ7AgICewICAnsCAgJ7AgICewICAnsCAgJ7AgICewIC
        AnwCAgJwDA0NFQcHBycCAgJ+MjY2BUFFRQRAREQEQEREBEBERANAREQDQEREBEBERARFSUkEFxkZCwIC
        AoEDAwNZAgICcgICAoIMDAwWDxAQEQYGBioGBgYqBgYGKgYGBioGBgYqBgYGKgYGBioGBgYqBgYGKgYG
        BioGBgYqBgYGKgcHByYiJCQHBgcHJwICAn4yNjYFQUVFBEBERARAREQEQEREA0BERANAREQEQEREBEVJ
        SQQXGRkLAgICgQMDA1kCAgJyAgICggwNDRUFBQUvAgICegICAnsCAgJ7AgICewICAnsCAgJ7AgICewIC
        AnsCAgJ7AgICewICAnsCAgJ8AgICcA0NDRQHBwcnAgICfjI2NgVBRUUEQEREBEBERARAREQDQEREA0BE
        RARAREQERUlJBBcZGQsCAgKBAwMDWQICAnICAgKCDAwMFg8QEBEGBgYqBgYGKgYGBioGBgYqBgYGKgYG
        BioGBgYqBgYGKgYGBioGBgYqBgYGKgYGBisHBwcmISMjCAYHBycCAgJ+MjY2BUFFRQRAREQEQEREBEBE
        RANAREQDQEREBEBERARFSUkEFxkZCwICAoEDAwNZAgICcgICAoIMDQ0VBQYGLwICAnwCAgJ9AgICfQIC
        An0CAgJ9AgICfQICAn0CAgJ9AgICfQICAn0CAgJ9AgICfgICAnEMDQ0VBwcHJwICAn4yNjYFQUVFBEBE
        RARAREQEQEREA0BERANAREQEQEREBEVJSQQXGRkLAgICgQMDA1kCAgJyAgICggsMDBdTWFgDODs7BDc7
        OwQ3OzsENzs7BDc7OwQ3OzsENzs7BDc7OwQ3OzsENzs7BDc7OwQ3OzsEOj09BIaPjwIGBwcoAgICfjI2
        NgVBRUUEQEREBEBERARAREQDQEREA0BERARAREQERUlJBBcZGQsCAgKBAwMDWQICAnICAgKCCwwMF1NY
        WANBRUUEQUVFBEFFRQRHTEwEQUVFBEVJSQRFSUkEQUVFBEFFRQRBRUUEQUVFBEFFRQRBRUUEg4uLAgYH
        BygCAgJ+MjY2BUFFRQRAREQEQEREBEBERANAREQDQEREBEBERARFSUkEFxkZCwICAoEDAwNZAgICcgIC
        AoILDAwXU1hYA0BERARBRUUERkpKAxUXFwo3OzsFHiAgCBweHgZNUlIDQEREBEBERARAREQEQEREBEBE
        RASCi4sCBgcHKAICAn4yNjYFQUVFBEBERARAREQEQEREA0BERANAREQEQEREBEVJSQQXGRkLAgICgQMD
        A1kCAgJyAgICggsMDBdTWFgDQUVFBMnV1QEEBAQ0AgMDbCcpKQcFBgYxAgMDbRAQEAxXXFwDQEREBEBE
        RARAREQEQEREBIKLiwIGBwcoAgICfjI2NgVBRUUEQEREBEBERARAREQDQEREA0BERARAREQERUlJBBcZ
        GQsCAgKBAwMDWQICAnICAgKCCwwMF1RZWQNWXFwDBQUFMwICAo4GBgYvbnV1AhsdHQkCAwNpAgICcxMU
        FA1LUFADQEREBEBERARAREQEgouLAgYHBygCAgJ+MjY2BUFFRQRAREQEQEREBEBERANAREQDQEREBEBE
        RARFSUkEFxkZCwICAoEDAwNZAgICcgICAoILDAwXYGZmAxobGwoCAgKVAgICUwAAAABBRUUEWF5eAwoL
        Cw0BAgKcAwQESP///wFbYWEDZWtrAktQUAOFjY0CBgcHKAICAn4yNjYFQUVFBEBERARAREQEQEREA0BE
        RANAREQEQEREBEVJSQQXGRkLAgICgQMDA1kCAgJyAgICggsMDBdUWVkDVltbAwUFBTUCAgKPBgYGLW51
        dQIeICAJAwMDZQIDA3YQEREOICIiBQkKChoICQkeDxAQEbfCwgEDBAQlAgICfjI1NQVBRUUEQEREBEBE
        RARAREQDQEREA0BERARAREQERUlJBBcZGQsCAgKBAwMDWQICAnICAgKCCwwMF1NYWANBRUUE1uLiAQQE
        BDcCAwNuJykpBwUGBjECAgJwDg8PDAwNDRECAgJ0AgICgwICAnwCAgKEAgICcgMDA2ACAgKCNTg4BUFF
        RQRAREQEQEREBEBERANAREQDQEREBEBERARFSUkEFxkZCwICAoEDAwNZAgICcgICAoILDAwXU1hYA0BE
        RARBRUUEREhIAxMUFAw2OTkFGx0dCRgZGQcAAAAAAwMDWwICAmkaHBwJIyUlBw0ODhMEBQU7AQEBtQIC
        AoJgZmYDQEREBEBERARAREQEQEREA0BERANAREQEQEREBERJSQQYGRkLAgICgAIDA1gCAgJyAgICggsM
        DBdTWFgDQEREBEBERARBRUUESExMBEFFRQRFSUkERUlJBIKLiwICAgJ0BAQENf///wFobm4CDQ4ODAMD
        A2oCAgJ5CwwMFlNYWANAREQEQEREBEBERARAREQDQEREA0BERARAREQEQUVFBDQ3NwUCAgJ1AgICfAIC
        AnECAgKCCwwMF1NYWANAREQEQEREBEBERARAREQEQEREBEBERARAREQEeYGBAgICAnUFBQU1AAAAAAcI
        CBsCAgKCAwMDZRAREQphZmYCQEREBEBERARAREQEQEREBEBERANAREQDQEREBEBERARAREQEc3p6AgYH
        BycCAgKWAgICigICAocLDAwWUlhYA0BERARAREQEQEREBEBERARAREQEQEREBEBERAR5gYECAgICdAMD
        AzIFBQUsAgICjgMEBEwqLCwES1BQA0BERARAREQEQEREBEBERARAREQEQEREA0BERANAREQEQEREBEBE
        RARAREQEWmBgAg4PDw4CAgJ3AQEBtQcHByUAAAAA1+TkAdXi4gHV4+MB1eLiAdXi4gHU4uIB1uPjAQAA
        AAACAgJ0AgICdwICAowFBQUziJCQAURISARAREQEQEREBEBERARAREQEQEREBEBERARAREQDQEREA0BE
        RARAREQEQEREBEBERARAREQET1RUAxgaGggEBARLAgICiQICAnECAgJwAgICcAICAnECAgJxAgICcAIC
        AnACAgJwAgICbwEBAa4CAgKUBwcHHbfBwQFBRUUEQEREBEBERARAREQEQEREBEBERARAREQEQEREBEBE
        RANAREQDQEREBEBERARAREQEQEREBEBERARAREQESU1NA0hMTAMHCAggBAUFOQQFBToEBQU6BAUFOgQF
        BToEBQU6BAUFOgQFBToEBQU6BQUFNQ4ODg5udHQCQEREBEBERARAREQEQEREBEBERARAREQEQEREBEBE
        RARAREQEQEREA0BERAJAREQDQEREA0BERANAREQDQEREA0BERANAREQDQkdHA19kZAH///8A////AP//
        /wD///8A////AP///wD///8A////AP///wCrrq4AR0tLAkBERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDQEREA0BERANAREQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//gAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAgAAAA
        AAAAAAQAAAAAAAAgIAAAAAAAAAAAAAA/8AA=
</value>
  </data>
</root>